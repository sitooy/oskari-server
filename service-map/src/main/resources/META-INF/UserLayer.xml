<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="UserLayer">

    <!-- Use type aliases to avoid typing the full classname every time. -->
    <typeAlias alias="UserLayer"
        type="fi.nls.oskari.domain.map.userlayer.UserLayer" />


    <resultMap id="UserLayerResult" class="UserLayer">
        <result property="id" column="id" />
        <result property="uuid" column="uuid" />
        <result property="layer_name" column="layer_name" />
        <result property="layer_desc" column="layer_desc" />
        <result property="layer_source" column="layer_source" />
        <result property="fields" column="fields" />
        <result property="publisher_name" column="publisher_name" />
        <result property="style_id" column="style_id" />
    </resultMap>



    <select id="findUserLayer" parameterClass="long" resultMap="UserLayerResult">
        select
        id,
        uuid,
        layer_name,
        layer_desc,
        layer_source,
        CAST (fields as text),
        publisher_name,
        style_id
        from
        user_layer
        where id = #id# 
 
    </select>

    
     <select id="findUserLayerByUid" parameterClass="string" resultMap="UserLayerResult">
        select
          id,
        uuid,
        layer_name,
        layer_desc,
        layer_source,
        CAST (fields as text),
        publisher_name,
        style_id
        from
         user_layer
        where uuid = #uid# 
 
    </select>
    
    
    <select id="calculateUserLayerBounds" parameterClass="long" resultClass="java.lang.String">
        SELECT ST_AsGeoJSON(ST_Extent(geometry))
		FROM user_layer_data
		WHERE user_layer_id = #userLayerId#
    </select>
    

    <statement id="deleteUserLayer" parameterClass="long">
        delete from
         user_layer where id=#layerId#
    </statement>



    <statement id="insertUserLayer" resultClass="java.lang.Long"
        parameterClass="UserLayer">
        INSERT INTO user_layer (
        uuid,
        layer_name,
        layer_desc,
        layer_source,
        fields,
        publisher_name,
        style_id)
        VALUES (
        #uuid#,
        #layer_name#,
        #layer_desc#,
        #layer_source#,
        CAST (#fields# as json),
        #publisher_name#,
        #style_id#)
        RETURNING
        id
    </statement>


    <update id="updateUserLayerCols" parameterClass="UserLayer">
        update
        user_layer set
        layer_name = #layer_name#,
        layer_desc = #layer_desc#,
        layer_source = #layer_source#,
        fields =  CAST (#fields# as json),
        publisher_name = #publisher_name#,
        style_id = #style_id#
        where id = #id# and uuid =#uuid#
    </update>

    <statement id="delete-userLayer-data"
               parameterClass="java.lang.Long">
        DELETE FROM user_layer_data WHERE user_layer_id = #id#
    </statement>

    <statement id="delete-userLayer"
               parameterClass="java.lang.Long">
        DELETE FROM user_layer WHERE id = #id#
    </statement>

    <statement id="delete-userLayer-style"
               parameterClass="java.lang.Long">
        <!-- Note! id is style_id from user_layer table -->
        DELETE FROM user_layer_style WHERE id = #id#
    </statement>
    <statement id=" delete-userLayer-style-by-layer-id"
               parameterClass="java.lang.Long">
        <!-- Note! id is style_id from user_layer table -->
        DELETE FROM user_layer_style WHERE id = #id#
    </statement>

    <update id="updatePublisherName"
        parameterClass="Map">
        update user_layer set
            publisher_name = #publisher_name:VarChar#
        where uuid = #uuid# and id = #id#
    </update>

</sqlMap>